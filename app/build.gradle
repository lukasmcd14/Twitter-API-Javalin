/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

version = '1.0.2'

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.10.3'
    compile 'io.javalin:javalin:3.11.2'
    compile 'org.glassfish:javax.json:1.1.4'
    compile 'org.twitter4j:twitter4j-core:4.0.7'
    compile 'org.slf4j:slf4j-simple:1.8.0-beta4'

    // https://mvnrepository.com/artifact/ru.lanwen.verbalregex/java-verbal-expressions
    compile group: 'ru.lanwen.verbalregex', name: 'java-verbal-expressions', version: '1.6'
}

compileJava {
    options.incremental = true
}

application {
    // Define the main class for the application.
    mainClass = 'me.lukasmcd.twdl.Main'
}

jar {
    manifest {
        attributes 'Main-Class': 'me.lukasmcd.twdl.Main'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


/*jar {
    manifest {
        attributes 'Main-Class': mainClass
    }
}*/
